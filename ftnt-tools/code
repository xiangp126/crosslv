#!/bin/bash
# set -x

fForceSearch=
fDebug=
fArgs=("--goto")
SCRIPTNAME=$(basename $0)
MAGENTA='\033[0;35m'
RESET='\033[0m'

usage() {
    cat << EOF
Usage: $SCRIPTNAME [options] <args>

Description:
    A wrapper script for the VS Code server CLI.
    It finds the VS Code server CLI binary and set the correct IPC socket.
    The reason for this script is to avoid the bug which has never been fixed by Microsoft:
    # Unable to connect to VS Code server: Error in request - ENOENT /run/user/1000/vscode-ipc-*.sock
    https://github.com/microsoft/vscode-remote-release/issues/6997#issue-1319650016
    https://github.com/microsoft/vscode-remote-release/issues/6362#issuecomment-1046458477

Options:
    -h, --help      Show this help message and exit
    -f, --force     Force search for the code binary, ignoring \$VSCODE_BIN_PATH
    -d, --debug     Enable debug mode (set -x)

Example: $SCRIPTNAME --force
         $SCRIPTNAME -d
         $SCRIPTNAME -h

EOF
    exit 0
}

parseOptions() {
    SHORTOPTS="hfdv"
    LONGOPTS="help,force,debug,version"
    if ! PARSED=$(getopt --options $SHORTOPTS --longoptions "$LONGOPTS" --name "$0" -- "$@"); then
        echo -e "${MAGENTA}Error: Failed to parse command-line options.${RESET}" >&2
        exit 1
    fi
    eval set -- "$PARSED"
    while true; do
        case "$1" in
            -h|--help)
                usage
                ;;
            -d|--debug)
                fDebug=true
                shift
                ;;
            -f|--force)
                fForceSearch=true
                shift
                ;;
            -v|--version)
                fArgs+=("--version")
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                echo -e "${MAGENTA}Invalid option: $1${RESET}" >&2
                exit 1
        esac
    done
    [ -n "$1" ] && fArgs+=("$1")
}

preCheck() {
    if ! declare -F setCodePath > /dev/null; then
        echo -e "${MAGENTA}Error: setCodePath function is not defined.${RESET}" >&2
        exit 1
    fi
}

main() {
    preCheck
    parseOptions "$@"
    [ -n "$fDebug" ] && set -x
    [ -z "$VSCODE_BIN_PATH" ] || [ -n "$fForceSearch" ] && setCodePath
    for _ in {1..2}; do
        "$VSCODE_BIN_PATH" "${fArgs[@]}"
        if [[ $? -eq 0 ]]; then
            break
        else
            setCodePath
        fi
    done
}

main "$@"
